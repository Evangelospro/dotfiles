#!/usr/bin/env bash
set -e

if pacman -Qs virt-manager >/dev/null 2>&1; then
    rebos api echo info "Setting up libvirt"
    sudo usermod -aG libvirt $USER
    sudo usermod -aG kvm $USER
    sudo usermod -aG video $USER

    sudo systemctl enable libvirtd.service --now

    sudo virsh net-autostart default >/dev/null
fi

# Ensure XDG directories are created
rebos api echo info "Creating XDG user directories"
xdg-user-dirs-update

# Alias thorium-browser to /opt/google/chrome/chrome
if [[ -f /opt/google/chrome/chrome ]]; then
    sudo mkdir -p /opt/google/chrome/
    sudo ln -nsf /usr/bin/thorium-browser /opt/google/chrome/chrome
fi

# Set java to latest java installed
rebos api echo info "Setting java to the latest installed version"
sudo archlinux-java set $(archlinux-java status |head -n 2|tail -n 1|cut -d ' ' -f 3)

{{- if .isHacking }}
# Mobile stuff
APKLAB_DIR=~/.apklab
if [ -f $APKLAB_DIR/first_run_completed ]; then
    jadx_path=$(\ls -d $APKLAB_DIR/jadx-*|head -n 1)
    apktool=$(\ls -d $APKLAB_DIR/apktool_*.jar|head -n 1)
    uber_apk_signer=$(\ls -d $APKLAB_DIR/uber-apk-signer-*.jar|head -n 1)
    echo -ne "#\!/usr/bin/env bash\n$jadx_path/bin/jadx" > ~/.local/bin/jadx && chmod +x ~/.local/bin/jadx
    echo -ne "#\!/usr/bin/env bash\n$jadx_path/bin/jadx-gui" > ~/.local/bin/jadx-gui && chmod +x ~/.local/bin/jadx-gui
    echo -ne "#\!/usr/bin/env bash\njava -jar $apktool" > ~/.local/bin/apktool && chmod +x ~/.local/bin/apktool
fi
{{- end }}

{{- if .isPersonal }}
# seadrive-daemon custom pkgbuild (fuse executable)
if ! pacman -Qs seadrive-daemon-custom >/dev/null 2>&1; then
    rebos api echo info "Installing custom seadrive-daemon"
    (cd ~/.local/share/chezmoi/PKGBUILDS/seadrive-daemon && makepkg -fs --noconfirm && sudo pacman --overwrite '*' --noconfirm -U seadrive-daemon-*.pkg.tar)
fi
{{- end }}

# update
rebos api echo info "Updating all packages and installing any source-only packages"
~/.local/bin/update

{{- if .isHacking }}
# fix rockyou location on archlinux
if [[ ! -f /usr/share/wordlists/rockyou.txt && $(pacman -Qs seclists) == "" ]]; then
    sudo mkdir -p /usr/share/wordlists/
    sudo ln -nsf /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt /usr/share/wordlists/rockyou.txt
fi
{{- end }}

# fix aur/viber wrong icon name
if [[ -f /usr/share/applications/viber.desktop ]]; then
    sudo sed -i 's/Icon=viber.png/Icon=viber/' /usr/share/applications/viber.desktop
fi

# Change shell to zsh
# check if zsh is installed and that it is not the users default shell
if [[ $SHELL == "/bin/zsh" ]]; then
    rebos api echo info "zsh is already the default shell not changing"
else
    if ! pacman -Qs zsh >/dev/null 2>&1; then
        rebos api echo error "zsh is not installed..."
    else
        rebos api echo info "Changing shell to zsh"
        chsh -s /bin/zsh
    fi
fi

# WM SPECIFIC CONFIGURATIONS
# Hyprland check if ~/.config/hypr/monitors.conf doesn't exist
if [[ ! -f ~/.config/hypr/monitors.conf ]]; then
    rebos api echo info "Setting up Hyprland monitors"
    cp ~/.config/hypr/monitors/monitors_default.conf ~/.config/hypr/monitors.conf
fi

rebos api echo success "Please reboot to ensure everything was successfully applied"
