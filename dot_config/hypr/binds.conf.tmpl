# Modifiers
$MOD = SUPER
$SHIFT_MOD = $MOD_SHIFT

# Exit / Reload
bind=$MOD,M,exec,power-menu
bind=$SHIFT_MOD,R,exec,hyprctl reload

# Plugins
## Hyprspace
# bind = $MOD, grave, overview:toggle
## Hyprswitch
# bindr = $MOD, TAB, exec, hyprswitch gui --filter-current-monitor --sort-recent
# bindr = $MOD_SHIFT, TAB, exec, hyprswitch gui --reverse --filter-current-monitor --sort-recent
# if it somehow doesn't close on releasing $switch_release, escape can kill (doesnt switch)
# bindrn = ,escape, exec, hyprswitch close --kill

# Utilities
bind = $MOD , Z, exec, magnify +0.5
bind = $MOD SHIFT, Z, exec, magnify 1.0
bindl={{.utilities.lockscreen.keybinding}},exec,{{.utilities.lockscreen.linux.command }}
bind={{.utilities.launcher.keybinding}},exec,{{.utilities.launcher.linux.command}}
bind=,XF86Search,exec,{{.utilities.launcher.linux.command}}
bind={{.utilities.clipboard.keybinding}},exec,{{.utilities.clipboard.linux.command}}
bind=$MOD,R,exec,dynamic-resize
bind=$MOD,P,exec,project-menu
bind=$MOD_SHIFT,P,exec,/usr/bin/wlrlui

# Screenshot / OCR
bind={{.utilities.screenshot.keybinding }},exec,{{.utilities.screenshot.linux.command }}
# Select area to perform OCR on
bind={{.utilities.ocr.keybinding }},exec,{{.utilities.ocr.linux.command }}

# Applications
bind={{ .applications.browser.keybinding }},exec,{{ .applications.browser.keybinding_command }}
bind=SHIFT_{{ .applications.browser.keybinding_new }},exec,{{ .applications.browser.keybinding_new_command }}

bind={{ .applications.burp.keybinding }},exec,{{ .applications.burp.keybinding_command}}

bind={{ .applications.terminal.keybinding }},exec,{{ .applications.terminal.keybinding_command}}
bind={{ .applications.terminal.keybinding_new }},exec,{{ .applications.terminal.keybinding_new_command}}

bind={{.applications.filemanager.keybinding}},exec,{{.applications.filemanager.keybinding_command}}
bind={{.applications.filemanager.keybinding_new}},exec,{{.applications.filemanager.keybinding_new_command}}

bind={{.applications.editor.keybinding}},exec,{{.applications.editor.keybinding_command}}
bind={{.applications.editor.keybinding_new}},exec,{{.applications.editor.keybinding_new_command}}

bind={{.applications.notes.keybinding}},exec,{{.applications.notes.keybinding_command}}

# Close / Fullscreen / Kill Applications
bind=ALT_L,F4,killactive
bindr=CTRL_SHIFT,ESCAPE,exec, hyprctl kill # xkill like functionality
bind=$MOD,F,fullscreen,0
bind=$MOD_SHIFT,F,togglefloating

# Function keys
bind=,XF86RFKill,exec,rfkill
binde=,XF86AudioRaiseVolume,exec,volumectl -b up
binde=,XF86AudioLowerVolume,exec,volumectl -b down
bind=,XF86AudioMute,exec,volumectl toggle-mute
bind=,XF86AudioPlay,exec,playerctl play-pause
bind=,XF86AudioNext,exec,playerctl next
bind=,XF86AudioPrev,exec,playerctl previous
binde=,XF86MonBrightnessUp,exec,lightctl up
binde=,XF86MonBrightnessDown,exec,lightctl down

# Scratchpads
# Valent (KDEConnect) special scratchpad workspace
bind=$MOD,K,exec,pop-valent
{{- if .isAsus }}
# Rog Control Center special scratchpad workspace
bind=,XF86Launch3,exec,pop-rog-control-center
{{- end }}

{{- if .isAsus }}
# Asus keyboard backlight
bind=,XF86Launch4,exec,asusctl led-mode -n
{{- end }}

# Rearrange windows in the current workspace
bind=$MOD,down,movewindow,b
bind=$MOD,left,movewindow,l
bind=$MOD,right,movewindow,r
bind=$MOD,up,movewindow,t

# Move Windows Between Workspaces
bind=$MOD,0,exec,workspace change 10
bind=$MOD_SHIFT,0,exec,workspace movewindow 10
{{- range $i := untilStep 1 10 1 }}
bind=$MOD,{{$i}},exec,workspace change {{$i}}
bind=$MOD_SHIFT,{{$i}},exec,workspace movewindow {{$i}}
{{- end }}

# Move focus between windows in the current workspace
bind=$MOD,S,movefocus,d
bind=$MOD,A,movefocus,l
bind=$MOD,D,movefocus,r
bind=$MOD,W,movefocus,u

# Resize windows in the current workspace
binde=$SHIFT_MOD,S,resizeactive, 0 10
binde=$SHIFT_MOD,A,resizeactive, -10 0
binde=$SHIFT_MOD,D,resizeactive, 10 0
binde=$SHIFT_MOD,W,resizeactive, 0 -10

# Move Windows Between Monitors
bind=$MOD_SHIFT,left,movewindow, mon:l
bind=$MOD_SHIFT,right,movewindow, mon:r

# Cycle between workspaces and windows
bind=ALT,TAB,exec,hyprswitch --daemon --filter-current-monitor --sort-recent --switch-ws-on-hover --hide-special-workspaces=true
# bind=SHIFT_ALT,TAB,exec,hyprswitch --reverse --daemon --filter-current-monitor --sort-recent --switch-ws-on-hover --hide-special-workspaces=true

# Move Windows with Mouse
bindm=$MOD,mouse:272,movewindow

# screen lock when the switch is turning off and then suspend
bindl=,switch:on:Lid Switch,exec,{{.utilities.lockscreen.linux.command }} & ;sleep 1; systemctl suspend
