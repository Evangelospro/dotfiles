# Modifiers
$MOD = SUPER
$SHIFT_MOD = $MOD_SHIFT

# Exit / Reload
bind={{.keybindings.wm.exit.key }},exec,{{.keybindings.wm.exit.command.linux }}
bind={{.keybindings.wm.reload.key }},exec,{{.keybindings.wm.reload.command.linux }}

# Plugins
## Hyprspace
# bind = $MOD, grave, overview:toggle
## Hyprswitch
# bindr = $MOD, TAB, exec, hyprswitch gui --filter-current-monitor --sort-recent
# bindr = $MOD_SHIFT, TAB, exec, hyprswitch gui --reverse --filter-current-monitor --sort-recent
# if it somehow doesn't close on releasing $switch_release, escape can kill (doesnt switch)
# bindrn = ,escape, exec, hyprswitch close --kill
## Jatoolkit overview
bind = $MOD, space, exec, /usr/bin/ags -c ~/.config/ags/config.js -b jakoolkit -t overview

# Utilities
bind = $MOD , Z, exec, magnify +0.5
bind = $MOD SHIFT, Z, exec, magnify 1.0
bindl={{.keybindings.utilities.lockscreen.key}},exec,{{.keybindings.utilities.lockscreen.command.linux }}
# bind={{.keybindings.utilities.launcher.key}},exec,{{.keybindings.utilities.launcher.command.linux}}
bind=,XF86Search,exec,{{.keybindings.utilities.launcher.command.linux}}
bind={{.keybindings.utilities.clipboard.key}},exec,{{.keybindings.utilities.clipboard.command.linux}}
bind=$MOD,R,exec,dynamic-resize
bind=$MOD,P,exec,project-menu
bind=$MOD_SHIFT,P,exec,/usr/bin/wlrlui

# Screenshot / OCR
bind={{.keybindings.screenshot.screenshot.key }},exec,{{.keybindings.screenshot.screenshot.command.linux }}
# Select area to perform OCR on
bind={{.keybindings.screenshot.ocr.key }},exec,{{.keybindings.screenshot.ocr.command.linux }}

# Applications
bind={{ .keybindings.applications.browser.key }},exec,{{ .keybindings.applications.browser.command.linux }}
bind=SHIFT_{{ .keybindings.applications.browser_new.key }},exec,{{ .keybindings.applications.browser_new.command.linux }}

bind={{ .keybindings.applications.burp.key }},exec,{{ .keybindings.applications.burp.command.linux }}

bind={{ .keybindings.applications.terminal.key }},exec,{{ .keybindings.applications.terminal.command.linux }}
bind={{ .keybindings.applications.terminal_new.key }},exec,{{ .keybindings.applications.terminal_new.command.linux }}

bind={{.keybindings.applications.filemanager.key}},exec,{{.keybindings.applications.filemanager.command.linux}}
bind={{.keybindings.applications.filemanager_new.key}},exec,{{.keybindings.applications.filemanager_new.command.linux}}

bind={{.keybindings.applications.editor.key}},exec,{{.keybindings.applications.editor.command.linux}}
bind={{.keybindings.applications.editor_new.key}},exec,{{.keybindings.applications.editor_new.command.linux}}

bind={{.keybindings.applications.notes.key}},exec,{{.keybindings.applications.notes.command.linux}}

# Close / Fullscreen / Kill Applications
bind=ALT_L,F4,killactive
bindr=CTRL_SHIFT,ESCAPE,exec, hyprctl kill # xkill like functionality
bind=$MOD,F,fullscreen,0
bind=$MOD_SHIFT,F,togglefloating

# Function keys
bind=,XF86RFKill,exec,rfkill
binde=,XF86AudioRaiseVolume,exec,volumectl -b up
binde=,XF86AudioLowerVolume,exec,volumectl -b down
bind=,XF86AudioMute,exec,volumectl toggle-mute
bind=,XF86AudioPlay,exec,playerctl play-pause
bind=,XF86AudioNext,exec,playerctl next
bind=,XF86AudioPrev,exec,playerctl previous
binde=,XF86MonBrightnessUp,exec,lightctl up
binde=,XF86MonBrightnessDown,exec,lightctl down

# Scratchpads
# Valent (KDEConnect) special scratchpad workspace
bind=$MOD,K,exec,pop-valent
{{- if .isAsus }}
# Rog Control Center special scratchpad workspace
bind=,XF86Launch3,exec,pop-rog-control-center
{{- end }}

{{- if .isAsus }}
# Asus keyboard backlight
bind=,XF86Launch4,exec,asusctl led-mode -n
{{- end }}

# Rearrange windows in the current workspace
{{- range $entry, $map := .keybindings.wm.movewindows}}
bind={{$map.key}},{{$map.command.linux}}
{{- end }}

# Move Windows Between Workspaces
bind=$MOD,0,exec,workspace change 10
bind=$MOD_SHIFT,0,exec,workspace movewindow 10
{{- range $i := untilStep 1 10 1 }}
bind=$MOD,{{$i}},exec,workspace change {{$i}}
bind=$MOD_SHIFT,{{$i}},exec,workspace movewindow {{$i}}
{{- end }}

# Move focus between windows in the current workspace
{{- range $entry, $map := .keybindings.wm.movefocus }}
bind={{$map.key}},{{$map.command.linux}}
{{- end }}

# Resize windows in the current workspace
{{- range $entry, $map := .keybindings.wm.resize }}
binde={{$map.key}},{{$map.command.linux}}
{{- end }}

# Move Windows Between Monitors
bind=$MOD_SHIFT,left,movewindow, mon:l
bind=$MOD_SHIFT,right,movewindow, mon:r

# Cycle between workspaces and windows
bind=ALT,TAB,exec,hyprswitch --daemon --filter-current-monitor --sort-recent --switch-ws-on-hover --hide-special-workspaces=true
# bind=SHIFT_ALT,TAB,exec,hyprswitch --reverse --daemon --filter-current-monitor --sort-recent --switch-ws-on-hover --hide-special-workspaces=true

# Move Windows with Mouse
bindm=$MOD,mouse:272,movewindow

# screen lock when the switch is turning off and then suspend
bindl=,switch:on:Lid Switch,exec,{{.keybindings.utilities.lockscreen.command.linux }} & ;sleep 1; systemctl suspend
