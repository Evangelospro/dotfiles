(defwidget panel_launcher [] (box :class "button-bin launcher"
    (button
        :class "button launcher"
        :onclick "${EWW_CONFIG_DIR}/scripts/launcher applauncher"
        (label :class "icon" :text "" :halign "center")
    )
))

(defwidget panel_clock [] (box :class "button-bin"
    (button
        :onclick "${EWW_CONFIG_DIR}/scripts/launcher toggle_menu calendar"
        :class "button clock"
        (label  :text panel_clock)
    )
))

(defwidget panel_workspaces [] (box :class "button-bin"
    (eventbox :class "button workspaces"
        (box
            :space-evenly false
            (for workspace in workspaces
                (button
                    :class "workspace-btn ${workspace.id == active_workspace ? "active" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                    :onclick "hyprctl dispatch workspace ${workspace.id}"
                    :valign "center"
                    (label :text {workspace.windows > 0 ? "${workspace.id == active_workspace ? "" : ""}" : ""})
                )
            )
        )
    )
))

(defwidget panel_window [] (box :class "button-bin"
    (button :class "button window" 
        (label
            :visible {window != "null" ? true : false}
            :text window)
    )
))


(defwidget music-control []
  (box :orientation "h"
       :class "music-control-box"
    (box :orientation "h"
      (box :orientation "v"
        (box :class "picture"
             :style "background-image: url('${art}')"
             :tooltip full_song_title
        )
      )
      (box :orientation "v"
        (box :orientation "h"
             :class "song-title-box"
          (label :text song_title :class "content")
        )
        (box :orientation "h"
             :class "song-buttons-box"
          (button :class "previous-button"
                  :onclick "playerctl -p spotify previous"
                  :tooltip "Previous Music"
                  "玲")
          (button :class "pause-button ${music_status == 'Playing' ? 'playing' : 'paused'}"
                  :onclick "playerctl -p spotify play-pause"
                  :tooltip "Play/Pause Music"
                  "${music_status == 'Playing' ? '' : ''} ")
          (button :class "next-button"
                  :onclick "playerctl -p spotify next"
                  :tooltip "Next Music"
                  "怜")
        )
      )
    )
  )
)
    
(defwidget panel_colorpicker [] (box :class "button-bin"
    (button
        :class "button colorpicker"
        :onclick "${EWW_CONFIG_DIR}/scripts/launcher colorpicker"
        (label :class "icon" :text "󰈊")
    )
))

(defwidget panel_system-indicators [] (box :class "button-bin"
    (button
        :onclick "${EWW_CONFIG_DIR}/scripts/launcher toggle_menu quicksettings"
        :class "button system-indicators"
        (box
            :space-evenly false
            :spacing 6
            (label  :class "bluetooth icon"
                    :text bluetooth_icon
                    :tooltip bluetooth_connected
                    :visible {bluetooth_state == "on"})
            (label  :class "network icon ${network_status}"
                    :tooltip "${wifi_strength}% ${wifi_ssid}"
                    :text network_icon )
            (box :class "battery"
                :tooltip "Battery: ${battery.percent}%"
                :space-evenly false
                (label :class "icon ${battery.state}"
                       :text "${battery.icon}")
                (label :text "${battery.percent}%"
                       :visible {battery.state != "charged" && battery.state != "charging"}))
        )
    )
))

(defwidget panel_notifications [] (box :class "button-bin"
    (button
        :class "button notifications"
        :onclick "${EWW_CONFIG_DIR}/scripts/launcher notifications"
        (box 
            :space-evenly false
            (label :class "icon" :text "${dnd_icon} ${notification_count}")
        )
    )
))

(defwidget panel_powermenu [] (box :class "button-bin powermenu" (button
    :class "button powermenu"
    :onclick "${EWW_CONFIG_DIR}/scripts/launcher toggle_menu powermenu"
    (label :class "icon" :text "")
)))

(defwidget bar [] (centerbox
    :class "panel ${active_ws_empty ? "floating" : ""}"
    (box
        :class "leftBar"
        :space-evenly false
        (panel_launcher)
        (panel_clock)
        (panel_workspaces)
        (label :visible false :text active_workspace);needs so active_workspace gets updated
    )
    (box
        :class "centerBar"
        (panel_window)
    )
    (box
        :class "righBar"
        :space-evenly false
        :halign "end"
        (panel_colorpicker)
        (panel_system-indicators)
        (panel_notifications)
        (panel_powermenu)
    )
))

(defwidget secondarybar [] (centerbox
    :class "panel secondary ${active_ws_empty ? "floating" : ""}"
    (box :halign "start"
        :space-evenly false
        (panel_workspaces)
        (panel_window)
    )
    (panel_clock)
    (box 
        :halign "end"
        :space-evenly false 
        (panel_sliders)
    )
))