; top bar

; Clock / Calendar
(defpoll clock_time :interval "5s" "date '+\%lï›˜\%M \%p'")
(defpoll clock_date :interval "10h" "date '+%b %d, %Y'")
(defpoll calendar_day :interval "20h" "date '+%d'")
(defpoll calendar_year :interval "20h" "date '+%Y'")

; Sound bar Disabled just use the buttons on the keyboard
; (defpoll volume_percent :interval "1s"  :run_while volume_reveal "scripts/stats sound --percent")
; (defpoll mic_percent :interval "1s" "amixer -D pulse sget Capture | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")

; Brightness bar Disabled just use the buttons on the keyboard
; (defpoll brightness_percent :interval "1s" :run_while brightness_reveal "scripts/stats brightness --percent")

; Network
(defpoll interfaceId :initial "enp1s0" :interval "1m" "nmcli c s --active | awk '/wifi|ethernet/ {print $6}' | head -n 1")
(defpoll wlanESSID :interval "20s" "scripts/stats network --essid")
(defpoll wlanIcon :interval "20s"  "scripts/stats network --icon")

; Bluetooth
(defpoll bluetoothStatus :interval "20s" "scripts/stats network --status")
(defpoll bluetoothDevices :interval "20s" "scripts/stats network --devices")
(defpoll bluetootheIcon :interval "20s"  "scripts/stats network --icon")

; Battery
(defpoll battery :initial "100" :interval "1m" :run_while control_reveal "scripts/stats battery --percent")
(defpoll battery_status :initial "Full" :interval "20s" :run_while control_reveal "scripts/stats battery --status")

; Notification variables
(defpoll notificationIcon :interval "1s" "scripts/stats notifications --icon")
(defpoll notificationNum :interval "5s" "scripts/stats notifications --num")

; Music
(deflisten music_status :initial "No players found" "scripts/music status")
(deflisten lyrics_json :run_while {music_status == "No players found" ? "false" : "true"} "scripts/music lyrics 1")

; Jsons
(deflisten indicators_json :inital '[{"caps_lock": "inactive", "num_lock": "active", "caffeine_state": "inactive", "caffeine_command": "", "layout": "US"}]' "scripts/indicators nodebug")
(deflisten workspaces0_json :initial '[{"num": 1, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 2, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 3, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 4, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 5, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 6, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 7, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 8, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 9, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 10, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}]' "scripts/workspaces 0 nodebug")
(deflisten workspaces1_json :initial '[{"num": 1, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 2, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 3, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 4, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 5, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 6, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 7, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 8, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 9, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}, {"num": 10, "status": "inactive-workspace", "classes": {}, "adresses": [], "icons": [[], []]}]' "scripts/workspaces 1 nodebug")
(deflisten appname0_json :inital '[{"title": "No focused window", "icon": "/usr/share/icons/Papirus/22x22/apps/appgrid.svg"}]' "scripts/appname 0 nodebug")
(deflisten appname1_json :initial '[{"title": "No focused window", "icon": "/usr/share/icons/Papirus/22x22/apps/appgrid.svg"}]' "scripts/appname 1 nodebug")

; revealers
(defvar music_reveal false)
