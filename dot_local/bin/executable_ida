#!/usr/bin/env bash
# check if the container(docker-ida) exists on the system
# if it does not exist, create it



function outputInfo(){
    echo "Connect to docker_ip:3389 via RDP"
    echo "RUN \`ida{arch}\` to start IDA"
    echo "Remember to stop the container when you are done with \`ida stop\`"
}

function startRDP(){
    if ! pgrep -x "rdesktop" > /dev/null
    then
        # find the ip of the container
        # ipaddr=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker-ida)
        rdesktop -u root -p DockerWineIDA 127.0.0.1:7878 -g 1920x1080
    fi
}

startup_command="echo -ne '#!/usr/bin/env bash\nwine /root/.wine/drive_c/IDA/ida64.exe' > /usr/bin/ida64 && echo -ne '#!/usr/bin/env bash\nwine /root/.wine/drive_c/IDA/ida.exe' > /usr/bin/ida32 && chmod +x /usr/bin/ida*"

# if the first parameter is start
if [ "$1" == "start" ]; then
    if [ ! "$(docker ps -q -a -f name=docker-ida)" ]; then
        # Create container
        echo "Creating container..."
        docker run -d --name docker-ida -v "$HOME/HACKING:/root/HACKING" -p "7878:3389/tcp" --hostname="DockerWine" --env="RDP_SERVER=yes" -it ghcr.io/nyamisty/docker-wine-ida:7.6sp1
        echo "Container created"
    else
        # if status is exited or created, start it
        status=$(docker inspect -f '{{.State.Status}}' docker-ida)
        if [ "$status" == "exited" ] || [ "$status" == "created" ]; then
            echo "Starting container..."
            docker start docker-ida
        fi
    fi
    sleep 2
    echo "Entering container..."
    outputInfo
    docker exec -it docker-ida /bin/bash -c "$startup_command"
    startRDP
elif [ "$1" == "stop" ]; then
    if [ "$(docker ps -aq -f name=docker-ida)" ]; then
        echo "Stopping container..."
        docker stop docker-ida
        echo "Container stopped"
    else
        echo "Container does not exist, nothing to stop"
    fi
else
    echo "Usage: ida start|stop"
fi
