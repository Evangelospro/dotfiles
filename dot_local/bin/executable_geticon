#!/usr/bin/env python3
import subprocess
import sys
import json
import os
import re

DEFAULT_ICON = "/usr/share/icons/Papirus/24x24/apps/appgrid.svg"
ICON_SIZE = 22

WINDOW_NAMES = json.loads(open(os.path.expanduser("~/.config/window_names.json")).read())

def failed(class_name):
    print(f"Failed to get icon for {class_name} please fix...")
    return DEFAULT_ICON


def getIcon(class_name, size):
    for regx in WINDOW_NAMES.keys():
        if re.search(regx, class_name):
            icon_class_name = WINDOW_NAMES[regx]["icon"]
            if os.path.exists(os.path.expanduser(icon_class_name)):
                return os.path.expanduser(icon_class_name)
            else:
                class_name = icon_class_name
            break
    for class_name_test in [class_name, class_name.lower()]:
        icon_list = (
            subprocess.check_output(
                ["/usr/bin/geticons", "--no-fallbacks", class_name_test, "-s", str(size), "-c", "1"]
            )
            .decode()
            .strip()
        )
        if icon_list:
            return icon_list
    # subprocess.Popen(
    #     [
    #         "notify-send",
    #         "-u",
    #         "critical",
    #         "-t",
    #         "5000",
    #         f"Icon not found for {class_name} manually fix in window_names.json",
    #     ]
    # )
    return failed(class_name)


if __name__ == "__main__":
    print(getIcon(sys.argv[1], ICON_SIZE))
